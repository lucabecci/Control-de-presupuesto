{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers/helpers.js","components/ControlPresupuesto.js","App.js","serviceWorker.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","prototype","PropTypes","number","isRequired","bool","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","gasto","id","shortid","generate","object","Gasto","Listado","gastos","map","key","array","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarPregunta","guardarGastos","crearGasto","useEffect","presupuestoRestante","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.2f10677a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Error = ({mensaje}) => (\r\n    <p className='alert alert-danger error'>{mensaje}</p>\r\n)\r\n\r\nexport default Error\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}","import React, { useState } from 'react'\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n    //Definimos el state para el presupuesto\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    //State por el valor ingresado es erroneo\r\n    const [error, guardarError] = useState(false);\r\n    //Funcion que lee el presupuesto del usuario y lo almacena\r\n    const definirPresupuesto = e =>{\r\n        guardarCantidad( parseInt(e.target.value) )\r\n    }\r\n    //Submit para definir el presupuesto\r\n    const agregarPresupuesto = e =>{\r\n        e.preventDefault()\r\n\r\n        //Validar\r\n        if( cantidad < 1 || isNaN( cantidad )){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        //Si se pasa la validacion\r\n        guardarError(false);\r\n        //Guardamos la cantidad en presupuesto y restante\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false)\r\n    }\r\n    return (\r\n        <>\r\n            <h2>Coloca tu presupuesto.</h2>\r\n            {error ? <Error mensaje ='El Presupuesto es Incorrecto'/> : null}\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                \r\n                />\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className = 'button-primary u-full-width'\r\n                    value='Definir Presupuesto'\r\n                />\r\n            </form>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Pregunta\r\n\r\nPregunta.prototype = {\r\n    guardarPresupuesto: PropTypes.number.isRequired,\r\n    guardarRestante: PropTypes.number.isRequired,\r\n    actualizarPregunta: PropTypes.bool.isRequired\r\n}","import React, { useState } from 'react'\r\nimport Error from './Error'\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState('');\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false)\r\n    const agregarGasto = e=>{\r\n        e.preventDefault();\r\n\r\n        //validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombre === ''){\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n        //construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n        //pasar el gasto al componente principal\r\n        guardarGasto(gasto)\r\n        guardarCrearGasto(true)\r\n        //resetear el form\r\n        guardarNombre('');\r\n        guardarCantidad(0);\r\n    }\r\n    return (\r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega Tus Gastos Aqui</h2>\r\n\r\n            {error ? <Error mensaje='Ambos campos son obligatorios o su presupuesto incorrecto'/> : null}\r\n\r\n            <div className='campo'>\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type ='text'\r\n                    className='u-full-width'\r\n                    placeholder ='Ej. Transporte'\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='campo'>\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type ='number'\r\n                    className='u-full-width'\r\n                    placeholder ='Ej. 120'\r\n                    value={cantidad}\r\n                    onChange={e=>guardarCantidad(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type='submit'\r\n                className='button-primary u-full-width'\r\n                value='Agregar Gasto'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Formulario\r\n\r\nFormulario.prototype = {\r\n    guardarGasto: PropTypes.object.isRequired,\r\n    guardarCrearGasto: PropTypes.object.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Gasto = ({gasto}) => (\r\n    <li className = 'gastos'>\r\n        <p>\r\n            {gasto.nombre}\r\n            <span className='gasto'>$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n);\r\n\r\nexport default Gasto\r\n\r\nGasto.prototype = {\r\n    gasto: PropTypes.object.isRequired\r\n}","import React from 'react'\r\nimport Gasto from './Gasto'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Listado = ({gastos}) => (\r\n    <div className='gastos-realizados'>\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto =>(\r\n            <Gasto \r\n                key={gasto.id}\r\n                gasto={gasto}\r\n            />\r\n        ))}\r\n    </div>\r\n)\r\n\r\nexport default Listado\r\n\r\nListado.prototype ={\r\n    gastos: PropTypes.array.isRequired\r\n}","import PropTypes from 'prop-types'\r\n\r\nexport const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if((presupuesto / 4) > restante){\r\n        clase = 'alert alert-danger'\r\n    }else if((presupuesto / 2) > restante){\r\n        clase = 'alert alert-warning'\r\n    }else{\r\n        clase = 'alert alert-success'\r\n    }\r\n    return clase\r\n}\r\nrevisarPresupuesto.prototype = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}","import React from 'react'\r\nimport { revisarPresupuesto } from '../helpers/helpers'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return (\r\n        <>\r\n            <div className='alert alert-primary'>\r\n                Presupuesto: {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante:{restante}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ControlPresupuesto\r\n\r\nControlPresupuesto.prototype = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}","import React, { useState, useEffect } from 'react';\nimport Pregunta from './components/Pregunta';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\n\n\nfunction App() {\n  //Definir el state de presupuesto y restante\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0)\n  const [mostrarPregunta, actualizarPregunta] = useState(true)\n  const[gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [crearGasto, guardarCrearGasto] = useState(false);\n  //UseEffect que actualiza el restante para <ControlPresupuesto/>\n  useEffect( () =>{\n    if(crearGasto === true){\n      //Agrega el nuevo presupuesto\n      guardarGastos([\n        ...gastos,\n        gasto\n      ])\n\n      //Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante)\n      //Resetea a false\n      guardarCrearGasto(false)\n    }\n  }, [gasto, crearGasto, gastos, restante])\n\n\n  return (\n    <div className='container'>\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className='contenido-principal contenido'>\n          {mostrarPregunta ? (\n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />) : (\n              <div className='row'>\n                <div className='one-half column'>\n                  <Formulario \n                    guardarGasto = {guardarGasto}\n                    guardarCrearGasto={guardarCrearGasto}\n                  />\n                </div>\n                <div className='one-half column'>\n                  <Listado \n                    gastos={gastos}\n                  />\n                  <ControlPresupuesto\n                    presupuesto={presupuesto}\n                    restante={restante}\n                  />\n            </div>\n              </div>\n            )}\n        </div>\n      </header>\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}